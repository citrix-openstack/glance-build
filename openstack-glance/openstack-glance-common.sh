#!/bin/sh

. /etc/rc.d/init.d/functions

user="glance"
pidfile="/var/run/glance/$name.pid"
lockfile="/var/lock/subsys/openstack-$name"
export PYTHON_EGG_CACHE=/tmp/$user/PYTHON_EGG_CACHE

[ -e "/etc/sysconfig/openstack-$name" ] && . "/etc/sysconfig/openstack-$name"

OPTIONS="${OPTIONS} --verbose --debug"

sed_config() {
  local opt="$1"
  local val="$2"
  sed -e "s,$opt = .*,$opt = $val," -i /etc/glance/$name.conf
  sed -e "s,$opt = .*,$opt = $val," -i /etc/glance/$name-paste.ini
}

apply_keystone_config() {
  # This updates the section related to the keystone middleware
  sed_config auth_host $KEYSTONE_HOST
  sed_config auth_uri http://$KEYSTONE_HOST:5000/
  sed_config admin_token $KEYSTONE_SUPERUSER_TOKEN
}

apply_glance_config() {
  # Update config file (either glance-api.conf or glance-registry.conf)
  # from Diablo M2 app:glance-registry and app:glance-api are no 
  # longer in for options like bind_port, bind_address, etc.
  CONF_FILE=/etc/glance/$name.conf
  PASTE_FILE=/etc/glance/$name-paste.ini
  for opt in $*
  do
    case "$opt" in
        -v|--verbose)
           key="--verbose"
           val="True"
           sec="DEFAULT"
           ;;
        -d|--debug)
           key="--debug"
           val="True"
           sec="DEFAULT"
           ;;
        *)
           key=${opt%=*}
           val=${opt#*=}
           sec="DEFAULT"
           ;;
    esac
    /usr/local/bin/geppetto/set-config-param $CONF_FILE ${key:2} $val $sec
    /usr/local/bin/geppetto/set-config-param $PASTE_FILE ${key:2} $val $sec
  done
  WARNING="# This file is auto-generated by Geppetto, please do not edit!"
  echo "$WARNING" | cat - $CONF_FILE > /tmp/out && mv /tmp/out $CONF_FILE
  echo "$WARNING" | cat - $PASTE_FILE > /tmp/out && mv /tmp/out $PASTE_FILE
}

start() {
    apply_keystone_config
    apply_glance_config $OPTIONS
    echo -n "Starting $name: "
    daemonize -p "$pidfile" -u "$user" -l "$lockfile" \
              -a -e "/var/log/glance/$name-stderr.log" "/usr/bin/$name" \
              --log-config="/etc/glance/logging.conf"
    retval=$?
    [ $retval -eq 0 ] && touch "$lockfile"
    [ $retval -eq 0 ] && success || failure
    echo
    return $retval
}

stop() {
    echo -n "Stopping $name: "
    killproc -p "$pidfile" "/usr/bin/$name"
    retval=$?
    rm -f "$lockfile"
    echo
    return $retval
}

restart() {
    stop
    start
}

rh_status() {
    status -p "$pidfile" "/usr/bin/$name"
}

rh_status_q() {
    rh_status &> /dev/null
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart}"
        exit 2
esac
exit $?
